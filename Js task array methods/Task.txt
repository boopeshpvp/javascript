1. Array triple - Return the tripled number of array when given array
input = [2,5,6,3,8]  output = [8, 125, 216, 27, 612]
NOTE: Using Iteration method and inbuilt Array methods

2. Calculate Total and Average
input: marks = [90, 85, 95, 96, 84]
output: {total: 450, average: 382}
NOTE: Using Iteration method and inbuilt Array methods

3. Get the Highest total student and display his name, total and average in array of object
input: marks = [
    { name: 'Raja', age: 18, marks: [90, 85, 95, 96, 84] },
    { name: 'Ravi', age: 18, marks: [84, 50, 95, 96, 84] },
    { name: 'Rani', age: 18, marks: [40, 85, 20, 96, 84] },
    { name: 'Deepak', age: 18, marks: [29, 65, 40, 76, 27] },
    { name: 'Kavya', age: 18, marks: [87, 85, 40, 89, 58] },
    { name: 'Ramya', age: 18, marks: [45, 50, 50, 76, 63] },
    { name: 'Deepa', age: 18, marks: [76, 30, 39, 36, 98] }]

output: [{name: studentName, total: totalMark, avg: average}]
NOTE:  inbuilt Array methods	

4. Write a function and get the input as a parameter return constrain's given below
Input : [2.5%, 2.5%, 5%, 450, 700, 850];
constrain: 
[0] = CGST
[1] = SGST
[2] = IGST
[3] = Raja's bill amount in ruppes
[4] = Ravi's bill amount in ruppes
[5] = Rani's bill amount in ruppes

1. Calculate total bill amount
2. Calculate total tax amount
3. Calculate total payable amount
Return these three details as object

Output: {totalAmount: XXXX, taxAmount: YYYY, billAmount: PayableAmount}

5. Write a function constrain given below
input: 
const user = [{
  id: 1,
  name: "Sigismundo",
  age: 17
}, {
  id: 2,
  name: "Sebastian",
  age: 76
}, {
  id: 3,
  name: "Ly",
  age: 63
}, {
  id: 4,
  name: "Miltie",
  age: 44
}, {
  id: 5,
  name: "Carce",
  age: 48
}, {
  id: 6,
  name: "Tomaso",
  age: 13
}, {
  id: 7,
  name: "Kendall",
  age: 11
}, {
  id: 8,
  name: "Zacharie",
  age: 59
}, {
  id: 9,
  name: "Hewett",
  age: 25
}, {
  id: 10,
  name: "Mic",
  age: 55
}, {
  id: 11,
  name: "Berne",
  age: 7
}, {
  id: 12,
  name: "Henri",
  age: 72
}, {
  id: 13,
  name: "Davie",
  age: 12
}, {
  id: 14,
  name: "Saunderson",
  age: 55
}, {
  id: 15,
  name: "Che",
  age: 79
}];

1. To get the users who's age match with 19 to 59
2. Get all user count
3. Get who's age above 45
4. Get the user count of age between 18 to 39 and his details.